version: "3"

networks: 
    your-network-name:

services: 
    apache:
        build: 
            context: ""
            dockerfile: ./docker/Dockerfile
        container_name: apache
        depends_on: 
            - mysql
        ports: 
            - 80:80
            - 443:443
        volumes: 
            - ./src:/var/www/html:cached
            - ./docker/certs:/var/www/certs:cached
        networks:
            - your-network-name
    mysql:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports: 
            - "23306:3306"
        volumes:
            - ./mysql:/var/lib/mysql:cached
        environment:
            MYSQL_USER: root
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: secret
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - your-network-name
    npm:
        image: node:13.7
        container_name: npm
        volumes:
            - ./src:/var/www/html:cached
        working_dir: /var/www/html
        entrypoint: ["npm"]
        networks:
            - your-network-name
    composer:
        build:
            context: ""
            dockerfile: ./docker/Dockerfile
        container_name: composer
        working_dir: /var/www/html
        entrypoint: [ "composer" ]
        volumes:
            - ./src:/var/www/html:cached
        networks:
            - your-network-name
    artisan:
        build:
            context: ""
            dockerfile: ./docker/Dockerfile
        container_name: artisan
        depends_on:
            - mysql
        working_dir: /var/www/html
        entrypoint: [ "/var/www/html/artisan" ]
        volumes:
            - ./src:/var/www/html:cached
        networks:
            - your-network-name

